name: Deploy Worker to Cloudflare Preview

on:
  push:
    branches: ['main']
    tags: ['v*']
  pull_request:
    branches: ['main']
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    name: Deploy Worker
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build Worker
        run: pnpm build || npx wrangler deploy --dry-run
        working-directory: apps/edge-functions

      - name: Check deployment secrets
        id: check-secrets
        run: |
          if [[ -n "${{ secrets.CLOUDFLARE_API_TOKEN }}" && -n "${{ secrets.CF_ACCOUNT_ID }}" ]]; then
            echo "has-secrets=true" >> $GITHUB_OUTPUT
          else
            echo "has-secrets=false" >> $GITHUB_OUTPUT
          fi

      - name: Deploy to Cloudflare Workers (Preview)
        if: steps.check-secrets.outputs.has-secrets == 'true'
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CF_ACCOUNT_ID }}
          command: deploy --env preview
          workingDirectory: apps/edge-functions

      - name: Skip deployment notice
        if: steps.check-secrets.outputs.has-secrets == 'false'
        run: |
          echo "⚠️ Skipping Cloudflare Workers deployment - missing required secrets:"
          echo "  - CLOUDFLARE_API_TOKEN"
          echo "  - CF_ACCOUNT_ID"
          echo ""
          echo "To enable deployment, add these secrets to your repository settings."
          echo "Worker build completed successfully ✅"
