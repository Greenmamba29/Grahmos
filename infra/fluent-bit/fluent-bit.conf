# Fluent Bit Configuration
# Phase 3: Improve/Deploy - Log Aggregation

[SERVICE]
    Flush                     1
    Log_Level                 info
    Daemon                    off
    Parsers_File              parsers.conf
    HTTP_Server               On
    HTTP_Listen               0.0.0.0
    HTTP_Port                 2020
    Health_Check              On
    storage.path              /tmp/flb-storage/
    storage.sync              normal
    storage.checksum          off
    storage.backlog.mem_limit 5M

# Docker container logs
[INPUT]
    Name              tail
    Path              /var/lib/docker/containers/*/*.log
    multiline.parser  docker, cri
    Tag               docker.*
    Refresh_Interval  5
    Mem_Buf_Limit     50MB
    Skip_Long_Lines   On
    DB                /var/log/flb_docker.db

# System logs
[INPUT]
    Name            systemd
    Tag             systemd.*
    Systemd_Filter  _SYSTEMD_UNIT=docker.service
    Systemd_Filter  _SYSTEMD_UNIT=nginx.service
    Read_From_Tail  On

# Application logs
[INPUT]
    Name              tail
    Path              /var/log/grahmos/*.log
    Tag               grahmos.*
    Refresh_Interval  5
    Mem_Buf_Limit     20MB
    DB                /var/log/flb_grahmos.db
    Parser            json

# NGINX logs
[INPUT]
    Name              tail
    Path              /var/log/nginx/access.log
    Tag               nginx.access
    Parser            nginx_access
    Refresh_Interval  5
    Mem_Buf_Limit     10MB
    DB                /var/log/flb_nginx_access.db

[INPUT]
    Name              tail
    Path              /var/log/nginx/error.log
    Tag               nginx.error
    Parser            nginx_error
    Refresh_Interval  5
    Mem_Buf_Limit     10MB
    DB                /var/log/flb_nginx_error.db

# Prometheus metrics
[INPUT]
    Name            prometheus_scrape
    Host            prometheus
    Port            9090
    Metrics_Path    /api/v1/label/__name__/values
    Tag             prometheus.metrics
    Interval_Sec    60

# Filter to add Kubernetes metadata (if running in k8s)
[FILTER]
    Name                kubernetes
    Match               docker.*
    Kube_URL            https://kubernetes.default.svc:443
    Kube_CA_File        /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    Kube_Token_File     /var/run/secrets/kubernetes.io/serviceaccount/token
    Kube_Tag_Prefix     docker.var.log.containers.
    Merge_Log           On
    Keep_Log            Off
    K8S-Logging.Parser  On
    K8S-Logging.Exclude On

# Grahmos application log parsing
[FILTER]
    Name         parser
    Match        grahmos.*
    Key_Name     log
    Parser       grahmos_json
    Reserve_Data On

# Add hostname and environment labels
[FILTER]
    Name          record_modifier
    Match         *
    Record        hostname ${HOSTNAME}
    Record        environment production
    Record        cluster grahmos-unified

# Security log enrichment
[FILTER]
    Name         grep
    Match        grahmos.*
    Regex        level (ERROR|WARN|error|warning)

[FILTER]
    Name         record_modifier
    Match        grahmos.*
    Record       security_event true
    Condition    Key_value_matches log_level ERROR

# Performance metrics from logs
[FILTER]
    Name         parser
    Match        nginx.access
    Key_Name     log
    Parser       nginx_access
    Reserve_Data On

# Rate limiting detection
[FILTER]
    Name         grep
    Match        nginx.access
    Regex        status 429

# Authentication failures
[FILTER]
    Name         grep
    Match        grahmos.*
    Regex        message auth.*fail.*

# Output to Prometheus (metrics)
[OUTPUT]
    Name        prometheus_exporter
    Match       prometheus.*
    Host        0.0.0.0
    Port        2021
    add_label   service grahmos-unified
    add_label   version v1.0.0

# Output to Loki (logs)
[OUTPUT]
    Name        loki
    Match       *
    Host        loki
    Port        3100
    Labels      {job="fluent-bit", container="$container_name", service="$service"}
    Auto_Kubernetes_Labels on
    Label_keys  container_name,service,hostname,environment

# Output to Elasticsearch (if using ELK stack)
# [OUTPUT]
#     Name        es
#     Match       *
#     Host        elasticsearch
#     Port        9200
#     Index       grahmos-logs
#     Type        _doc
#     HTTP_User   elastic
#     HTTP_Passwd password
#     Logstash_Format On
#     Logstash_Prefix grahmos
#     Logstash_DateFormat %Y.%m.%d
#     Include_Tag_Key On
#     Tag_Key     tag
#     Time_Key    @timestamp

# Output to file (backup)
[OUTPUT]
    Name        file
    Match       grahmos.*
    Path        /var/log/grahmos/
    File        grahmos-backup.log
    Format      json_lines

# Output to stdout (development)
# [OUTPUT]
#     Name   stdout
#     Match  *
#     Format json_lines
